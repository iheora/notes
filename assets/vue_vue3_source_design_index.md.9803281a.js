import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.88002d8f.js";const h=JSON.parse('{"title":"Vue3核心源码实现","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3_source_design/index.md","filePath":"vue/vue3_source_design/index.md"}'),p={name:"vue/vue3_source_design/index.md"},l=e(`<h1 id="vue3核心源码实现" tabindex="-1">Vue3核心源码实现 <a class="header-anchor" href="#vue3核心源码实现" aria-label="Permalink to &quot;Vue3核心源码实现&quot;">​</a></h1><h2 id="reactivity-对象属性代理-取值和赋值操作" tabindex="-1">reactivity 对象属性代理（取值和赋值操作） <a class="header-anchor" href="#reactivity-对象属性代理-取值和赋值操作" aria-label="Permalink to &quot;reactivity 对象属性代理（取值和赋值操作）&quot;">​</a></h2><p>Vue3采用新的管理方式（monorepo）来管理项目。</p><p>monorepo：一个仓库中管理多个包的方式。</p><pre><code>      @vue/compiler-dom  -&gt;  @vue/compiler-core
</code></pre><p>Vue</p><pre><code>      @vue/runtime-dom  -&gt;   @vue/runtime-core  -&gt;  @vue/reactivity
</code></pre><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yarn add webpack webpack</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cli webpack</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">server</span></span>
<span class="line"><span style="color:#E1E4E8;">yarn add html</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">webpack</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">plugin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yarn add webpack webpack</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cli webpack</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">server</span></span>
<span class="line"><span style="color:#24292E;">yarn add html</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">webpack</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">plugin</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yarn add @vue</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">reactivity</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yarn add @vue</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">reactivity</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { reactive, effect } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@vue/reactivity&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">state</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reactive</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&#39;yueluo&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  age: </span><span style="color:#79B8FF;">22</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">effect</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(state.name);</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">state.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;YUELUO&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// yueluo</span></span>
<span class="line"><span style="color:#6A737D;">// YUELUO</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { reactive, effect } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@vue/reactivity&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">state</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reactive</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;yueluo&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  age: </span><span style="color:#005CC5;">22</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">effect</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(state.name);</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">state.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;YUELUO&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// yueluo</span></span>
<span class="line"><span style="color:#6A737D;">// YUELUO</span></span></code></pre></div><p>effect：副作用 reactive：响应式</p><p>实现reactivity包</p><h2 id="reactivity-对象属性拦截" tabindex="-1">reactivity 对象属性拦截 <a class="header-anchor" href="#reactivity-对象属性拦截" aria-label="Permalink to &quot;reactivity 对象属性拦截&quot;">​</a></h2><p>Vue3相比较Vue2来说，有比较大的性能提升。 Vue3使用的proxy代理会在取值的时候判断是否是对象，然后进行代理。 Vue2处理对象时，一开始就会递归的调用definedProperty进行属性的定义。</p><h2 id="effect-依赖收集" tabindex="-1">effect 依赖收集 <a class="header-anchor" href="#effect-依赖收集" aria-label="Permalink to &quot;effect 依赖收集&quot;">​</a></h2><p>Vue3.0 effect 相当于 Vue2.0 watcher。</p><h2 id="effect-视图更新" tabindex="-1">effect 视图更新 <a class="header-anchor" href="#effect-视图更新" aria-label="Permalink to &quot;effect 视图更新&quot;">​</a></h2><h2 id="computed-计算属性" tabindex="-1">computed 计算属性 <a class="header-anchor" href="#computed-计算属性" aria-label="Permalink to &quot;computed 计算属性&quot;">​</a></h2>`,18),o=[l];function t(c,r,i,y,E,d){return a(),n("div",null,o)}const v=s(p,[["render",t]]);export{h as __pageData,v as default};
