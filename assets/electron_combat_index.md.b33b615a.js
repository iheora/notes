import{_ as l,o,c as p,Q as a,k as s}from"./chunks/framework.88002d8f.js";const e="/notes/assets/chromium.cfe452ef.png",n="/notes/assets/electron.629921c5.png",t="/notes/assets/electron_design.ee6ed2c6.png",c="/notes/assets/tomato.48bc8014.png",r="/notes/assets/process.ad327b0b.png",E="/notes/assets/func.3f45cb34.png",y="/notes/assets/transform_task.52866f5d.png",i="/notes/assets/webrtc.c0401435.png",u="/notes/assets/project_design.db9707c7.png",d="/notes/assets/webrtc_conn.5671c6ed.png",F="/notes/assets/p2p.15c7d318.png",x=JSON.parse('{"title":"Electron","description":"","frontmatter":{},"headers":[],"relativePath":"electron/combat/index.md","filePath":"electron/combat/index.md"}'),h={name:"electron/combat/index.md"},q=a(`<h1 id="electron" tabindex="-1">Electron <a class="header-anchor" href="#electron" aria-label="Permalink to &quot;Electron&quot;">​</a></h1><h2 id="一、electron-基础" tabindex="-1">一、Electron 基础 <a class="header-anchor" href="#一、electron-基础" aria-label="Permalink to &quot;一、Electron 基础&quot;">​</a></h2><h3 id="electron-基本概念" tabindex="-1">Electron 基本概念 <a class="header-anchor" href="#electron-基本概念" aria-label="Permalink to &quot;Electron 基本概念&quot;">​</a></h3><h4 id="学习难点" tabindex="-1">学习难点 <a class="header-anchor" href="#学习难点" aria-label="Permalink to &quot;学习难点&quot;">​</a></h4><ul><li>涉及技术栈比较多；</li><li>工程化建设；</li><li>如何利用 Electron 能力。</li></ul><h4 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h4><p>electron 是由 GitHub 开发的开源框架。</p><p>它允许开发者使用 Web 技术构建跨平台桌面应用。</p><blockquote><p>Electron = Chromium + node.js + NativeAPI</p><p>高效：通过 Web 技术写 UI</p><p>能力：底层能力</p><p>体验：跨平台&amp;原生能力</p></blockquote><h4 id="历史" tabindex="-1">历史 <a class="header-anchor" href="#历史" aria-label="Permalink to &quot;历史&quot;">​</a></h4><p>网景公司在浏览器大战被 IE 击败后，开放源码，成立 Mozilla，派生了 Firefox。</p><p>Chrome 基于 Firefox 开发并产生了 V8 引擎，Node.js 基于 V8 引擎，实现了非阻塞 IO。</p><p>NW 基于 Node 和 Chromium 开发了桌面端，Atom 在尝试 NW 失败后，开始了 Atom-Shell 开发，最后改名为 Electron。</p><h4 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h4><p>快速试错、快速占领市场。</p><p>特定领域：开发者工具、效率应用。</p><blockquote><p>效率应用、开发者工具、实用工具、播放器、社交应用、照片&amp;视频工具、游戏、理财应用、商业类应用、教育类应用、设计应用。</p></blockquote><p>同时开发 Web 版和桌面版。</p><blockquote><p>Electron 可以让 Web 和 桌面端具有复用大量代码的可能性。</p></blockquote><h4 id="落地场景" tabindex="-1">落地场景 <a class="header-anchor" href="#落地场景" aria-label="Permalink to &quot;落地场景&quot;">​</a></h4><p>Atom、slack、VS Code、Whatsapp、WordPress、大象等。</p><h4 id="学习-electron-有啥好处" tabindex="-1">学习 Electron 有啥好处 <a class="header-anchor" href="#学习-electron-有啥好处" aria-label="Permalink to &quot;学习 Electron 有啥好处&quot;">​</a></h4><p>造工具。</p><p>提升自己的技术深度。</p><h4 id="页面基本构成" tabindex="-1">页面基本构成 <a class="header-anchor" href="#页面基本构成" aria-label="Permalink to &quot;页面基本构成&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">app</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> package.json</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> index.html</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> main.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">app</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> package.json</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> index.html</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> main.js</span></span></code></pre></div><h3 id="electron-架构原理" tabindex="-1">Electron 架构原理 <a class="header-anchor" href="#electron-架构原理" aria-label="Permalink to &quot;Electron 架构原理&quot;">​</a></h3><h4 id="chromium-架构" tabindex="-1">Chromium 架构 <a class="header-anchor" href="#chromium-架构" aria-label="Permalink to &quot;Chromium 架构&quot;">​</a></h4><p>chromium 本质是 Chrome 的开源版，可以看作是一个浏览器。</p><blockquote><p>chromium 是多进程架构，包含浏览器主进程和渲染进程等；</p><p>进程间通过 IPC 通信；</p></blockquote><div><img src="`+e+'"></div><h4 id="electron-架构" tabindex="-1">Electron 架构 <a class="header-anchor" href="#electron-架构" aria-label="Permalink to &quot;Electron 架构&quot;">​</a></h4><p>Electron 在各个进程中暴露了很多 Native API，并且引入了 NodeJs。</p><p>Node.js 事件循环基于 libuv，但 Chromium 基于 message pump。</p><blockquote><p>Node.js 和 Chromiums 整合方式：</p><p>Chromium 集成到 Node.js，使用 libuv 实现了 message pump (nw)。</p><p>Node.js 集成到 Chromium。</p></blockquote><div><img src="'+n+'"></div><p>Electron 是将 Node.js 集成到 Chromium 中。</p><blockquote><p>Electron 启用一个新的安全线程去轮询 backend_fd，当 Node.js 有了一个新事件之后。</p><p>通过 PostTask 转发到 Chromium 的事件循环中。这样实现 Electron 的事件融合。</p></blockquote><div><img src="'+t+`" style="zoom:80%;"></div><h3 id="桌面端技术选型" tabindex="-1">桌面端技术选型 <a class="header-anchor" href="#桌面端技术选型" aria-label="Permalink to &quot;桌面端技术选型&quot;">​</a></h3><h4 id="为啥要开发桌面端" tabindex="-1">为啥要开发桌面端 <a class="header-anchor" href="#为啥要开发桌面端" aria-label="Permalink to &quot;为啥要开发桌面端&quot;">​</a></h4><ul><li>更快捷的入口</li><li>离线可用</li><li>调用系统能力（通知、硬件）</li><li>安全需求</li><li>.....</li></ul><h4 id="桌面端技术有哪些" tabindex="-1">桌面端技术有哪些 <a class="header-anchor" href="#桌面端技术有哪些" aria-label="Permalink to &quot;桌面端技术有哪些&quot;">​</a></h4><p><strong>Native（C++/C#/Objective-C）</strong></p><ul><li>高性能</li><li>原生体验</li><li>包体积小</li><li>门槛高</li><li>迭代速度慢</li></ul><p><strong>QT</strong></p><ul><li>基于 C++</li><li>跨平台（Mac、Windows、IOS、Android、Linux、嵌入式）</li><li>高性能</li><li>媲美原生体验</li><li>门槛高</li><li>迭代速度一般</li></ul><p><strong>Flutter</strong></p><ul><li>跨端（IOS、Android、Mac、Windows、Linux、Web）</li><li>PC 端在发展中（Mac &gt; Linux、Windows）</li><li>基建少</li></ul><p><strong>NW.js</strong></p><ul><li>跨平台（Mac、Windows、Linux），v0.14.7 支持 XP（XP 市场份额约为 15%）</li><li>迭代快，Web 技术构建</li><li>源码加密、支持 Chrome 拓展</li><li>社区活跃</li><li>包体积大</li><li>性能一般</li></ul><blockquote><p>微信开发者工具就是 nw.js 实现的（历史原因）。</p></blockquote><p><strong>Electron</strong></p><ul><li>跨平台（Mac、Windows、Linux、不支持 XP）</li><li>Web 技术构建</li><li>社区活跃</li><li>大型应用案例</li><li>包体积大</li><li>性能一般</li></ul><p><strong>其他</strong></p><p>Carlo（不成熟）、WPF、Chromium Embedded Framework（CEF）、PWA。</p><table><thead><tr><th></th><th>Electron</th><th>Native</th><th>QT</th><th>NW</th></tr></thead><tbody><tr><td>性能</td><td>★</td><td>★★★</td><td>★★</td><td>★</td></tr><tr><td>安装包大小</td><td>★</td><td>★★★</td><td>★</td><td>★</td></tr><tr><td>原生体验</td><td>★</td><td>★★★</td><td>★★</td><td>★</td></tr><tr><td>跨平台</td><td>★★★</td><td>×</td><td>★★★</td><td>★★★</td></tr><tr><td>开发效率</td><td>★★★</td><td>★</td><td>★★</td><td>★★★</td></tr><tr><td>人才储备</td><td>★★★</td><td>★★</td><td>★★</td><td>★★★</td></tr><tr><td>社区</td><td>★★★</td><td>★★</td><td>★</td><td>★★</td></tr><tr><td>适用场景</td><td>跨平台应用、快速交付、前端技术栈</td><td>专业应用、高性能</td><td>跨平台应用、高性能</td><td>跨平台应用、快速交付、前端技术栈</td></tr></tbody></table><h3 id="开发环境搭建" tabindex="-1">开发环境搭建 <a class="header-anchor" href="#开发环境搭建" aria-label="Permalink to &quot;开发环境搭建&quot;">​</a></h3><h4 id="编辑器" tabindex="-1">编辑器 <a class="header-anchor" href="#编辑器" aria-label="Permalink to &quot;编辑器&quot;">​</a></h4><ul><li>VS Code</li><li>WebStorm</li><li>Atom</li><li>VIM</li><li>...</li></ul><h4 id="node-js" tabindex="-1">Node.js <a class="header-anchor" href="#node-js" aria-label="Permalink to &quot;Node.js&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">nvm install </span><span style="color:#79B8FF;">12.14</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">nvm use </span><span style="color:#79B8FF;">12.14</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">npm </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">v</span></span>
<span class="line"><span style="color:#E1E4E8;">node </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">v</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">nvm install </span><span style="color:#005CC5;">12.14</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">nvm use </span><span style="color:#005CC5;">12.14</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">npm </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">v</span></span>
<span class="line"><span style="color:#24292E;">node </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">v</span></span></code></pre></div><h4 id="electron-安装" tabindex="-1">Electron 安装 <a class="header-anchor" href="#electron-安装" aria-label="Permalink to &quot;Electron 安装&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install electron </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"><span style="color:#6A737D;">// window 打包需要基于 32 位，这样才能保证 32 位和 64 位都可用（安装不需要指定）</span></span>
<span class="line"><span style="color:#E1E4E8;">npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">arch</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">ia32 </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">plarform</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">win32 electron </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">npx electron </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">v </span><span style="color:#6A737D;">// npm 版本大于 5.2</span></span>
<span class="line"><span style="color:#E1E4E8;">.</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">node_modules</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">.bin</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">electron </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">v </span><span style="color:#6A737D;">// npm 版本小于 5.2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install electron </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"><span style="color:#6A737D;">// window 打包需要基于 32 位，这样才能保证 32 位和 64 位都可用（安装不需要指定）</span></span>
<span class="line"><span style="color:#24292E;">npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">arch</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">ia32 </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">plarform</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">win32 electron </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">D</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">npx electron </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">v </span><span style="color:#6A737D;">// npm 版本大于 5.2</span></span>
<span class="line"><span style="color:#24292E;">.</span><span style="color:#032F62;">/node_modules/</span><span style="color:#24292E;">.bin</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">electron </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">v </span><span style="color:#6A737D;">// npm 版本小于 5.2</span></span></code></pre></div><blockquote><p>cnpm install --arch=ia32 --platform=win32 electron -D</p><p>ELECTRON_MIRROR=<a href="https://cdn.npm.taobao.org/dist/electron/" target="_blank" rel="noreferrer">https://cdn.npm.taobao.org/dist/electron/</a> npm install electron --save-dev</p></blockquote><h3 id="番茄钟应用案例" tabindex="-1">番茄钟应用案例 <a class="header-anchor" href="#番茄钟应用案例" aria-label="Permalink to &quot;番茄钟应用案例&quot;">​</a></h3><p>####番茄工作法</p><p>番茄工作法是一种时间管理法。</p><p>使用定时器分割出一个一般为 25 分钟工作时间和 5 分钟休息时间。</p><h4 id="交互流程" tabindex="-1">交互流程 <a class="header-anchor" href="#交互流程" aria-label="Permalink to &quot;交互流程&quot;">​</a></h4><img src="`+c+'" style="zoom:80%;"><img src="'+r+`" style="zoom:80%;"><h4 id="electron-渲染进程模块" tabindex="-1">Electron 渲染进程模块 <a class="header-anchor" href="#electron-渲染进程模块" aria-label="Permalink to &quot;Electron 渲染进程模块&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">BrowserWindow</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 主进程 </span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">ipcRenderer</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 渲染进程</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">app</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">BrowserWindow</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 主进程 </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">ipcRenderer</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 渲染进程</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ipcRenderer.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(channel, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">args).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// handleResult </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 渲染进程与主进程通信</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ipcRenderer.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(channel, </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">args).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// handleResult </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 渲染进程与主进程通信</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h4 id="electron-主进程模块" tabindex="-1">Electron 主进程模块 <a class="header-anchor" href="#electron-主进程模块" aria-label="Permalink to &quot;Electron 主进程模块&quot;">​</a></h4><p>app，用于控制应用生命周期。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ready&#39;</span><span style="color:#E1E4E8;">, callback); </span><span style="color:#6A737D;">// 应用程序就绪后开始业务</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ready&#39;</span><span style="color:#24292E;">, callback); </span><span style="color:#6A737D;">// 应用程序就绪后开始业务</span></span></code></pre></div><p>BrowserWindow，用于创建和控制窗口。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> win </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BrowserWindow</span><span style="color:#E1E4E8;">({ width, height, </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> }); </span><span style="color:#6A737D;">// 创建窗口，并设置宽高</span></span>
<span class="line"><span style="color:#E1E4E8;">win.</span><span style="color:#B392F0;">loadURL</span><span style="color:#E1E4E8;">(url)、win.</span><span style="color:#B392F0;">loadFile</span><span style="color:#E1E4E8;">(path); </span><span style="color:#6A737D;">// 加载页面</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> win </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BrowserWindow</span><span style="color:#24292E;">({ width, height, </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> }); </span><span style="color:#6A737D;">// 创建窗口，并设置宽高</span></span>
<span class="line"><span style="color:#24292E;">win.</span><span style="color:#6F42C1;">loadURL</span><span style="color:#24292E;">(url)、win.</span><span style="color:#6F42C1;">loadFile</span><span style="color:#24292E;">(path); </span><span style="color:#6A737D;">// 加载页面</span></span></code></pre></div><p>Notification，创建 Notiffication。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> notification </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Notification</span><span style="color:#E1E4E8;">({ title, body, actions:[ { text, type } ] });</span></span>
<span class="line"><span style="color:#E1E4E8;">notification.</span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> notification </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Notification</span><span style="color:#24292E;">({ title, body, actions:[ { text, type } ] });</span></span>
<span class="line"><span style="color:#24292E;">notification.</span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">();</span></span></code></pre></div><p>ipcMain.handle(channel, handler)，处理渲染进程的 channel 请求，在 handler 中 return 返回结果。</p><h4 id="编写番茄钟" tabindex="-1">编写番茄钟 <a class="header-anchor" href="#编写番茄钟" aria-label="Permalink to &quot;编写番茄钟&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cnpm i electron@</span><span style="color:#79B8FF;">7.1</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> timer.js </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cnpm i electron@</span><span style="color:#005CC5;">7.1</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> timer.js </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">D</span></span></code></pre></div><p><strong>main.js</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">BrowserWindow</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">Notification</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">ipcMain</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> win;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ready&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 赋值给全局变量，避免被垃圾回收</span></span>
<span class="line"><span style="color:#E1E4E8;">  win </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BrowserWindow</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    width: </span><span style="color:#79B8FF;">600</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    height: </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    webPreferences: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      nodeIntegration: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  win.</span><span style="color:#B392F0;">loadFile</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;../index.html&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">handleIPC</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">handleIPC</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  ipcMain.</span><span style="color:#B392F0;">handle</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;work-notification&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">resolve</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">reject</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">notification</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Notification</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        title: </span><span style="color:#9ECBFF;">&#39;任务结束&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        body: </span><span style="color:#9ECBFF;">&#39;是否开始休息&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        actions: [</span></span>
<span class="line"><span style="color:#E1E4E8;">          {</span></span>
<span class="line"><span style="color:#E1E4E8;">            text: </span><span style="color:#9ECBFF;">&#39;开始休息&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            type: </span><span style="color:#9ECBFF;">&#39;button&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">        closeButtonText: </span><span style="color:#9ECBFF;">&#39;继续工作&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      notification.</span><span style="color:#B392F0;">show</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">      notification.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;action&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;rest&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">      notification.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;close&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;work&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      });</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res;</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">app</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">BrowserWindow</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">Notification</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">ipcMain</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> win;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ready&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 赋值给全局变量，避免被垃圾回收</span></span>
<span class="line"><span style="color:#24292E;">  win </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BrowserWindow</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    width: </span><span style="color:#005CC5;">600</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    height: </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    webPreferences: {</span></span>
<span class="line"><span style="color:#24292E;">      nodeIntegration: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  win.</span><span style="color:#6F42C1;">loadFile</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;../index.html&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">handleIPC</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">handleIPC</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  ipcMain.</span><span style="color:#6F42C1;">handle</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;work-notification&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">((</span><span style="color:#E36209;">resolve</span><span style="color:#24292E;">, </span><span style="color:#E36209;">reject</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">notification</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Notification</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        title: </span><span style="color:#032F62;">&#39;任务结束&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        body: </span><span style="color:#032F62;">&#39;是否开始休息&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        actions: [</span></span>
<span class="line"><span style="color:#24292E;">          {</span></span>
<span class="line"><span style="color:#24292E;">            text: </span><span style="color:#032F62;">&#39;开始休息&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            type: </span><span style="color:#032F62;">&#39;button&#39;</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        ],</span></span>
<span class="line"><span style="color:#24292E;">        closeButtonText: </span><span style="color:#032F62;">&#39;继续工作&#39;</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      notification.</span><span style="color:#6F42C1;">show</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      notification.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;action&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;rest&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">      notification.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;close&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;work&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      });</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>renderer.js</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">ipcRenderer</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Timer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;timer.js&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">startWork</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">workTimer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Timer</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    ontick: updateTime,</span></span>
<span class="line"><span style="color:#E1E4E8;">    onend: notification</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  workTimer.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">updateTime</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">ms</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">timerContainer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;J-timer&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (ms </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> ss </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> mm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (s </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">60</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  timerContainer.innerText </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">mm</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">toString</span><span style="color:#9ECBFF;">().</span><span style="color:#B392F0;">padStart</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">, </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">) </span><span style="color:#9ECBFF;">} : \${</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">ss</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">toString</span><span style="color:#9ECBFF;">().</span><span style="color:#B392F0;">padStart</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">, </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">) </span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">notification</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> ipcRenderer.</span><span style="color:#B392F0;">invoke</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;work-notification&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (res) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;rest&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">alert</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;休息&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;work&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">startWork</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">startWork</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">ipcRenderer</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Timer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;timer.js&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">startWork</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">workTimer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Timer</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    ontick: updateTime,</span></span>
<span class="line"><span style="color:#24292E;">    onend: notification</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  workTimer.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateTime</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">ms</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">timerContainer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;J-timer&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (ms </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ss </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> mm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (s </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">60</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  timerContainer.innerText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#032F62;"> </span><span style="color:#24292E;">mm</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#032F62;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">2</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">) </span><span style="color:#032F62;">} : \${</span><span style="color:#032F62;"> </span><span style="color:#24292E;">ss</span><span style="color:#032F62;">.</span><span style="color:#6F42C1;">toString</span><span style="color:#032F62;">().</span><span style="color:#6F42C1;">padStart</span><span style="color:#032F62;">(</span><span style="color:#005CC5;">2</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">) </span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">notification</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> ipcRenderer.</span><span style="color:#6F42C1;">invoke</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;work-notification&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (res) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;rest&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;休息&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;work&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">startWork</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">startWork</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="electron-vs-web-特性" tabindex="-1">Electron vs Web： 特性 <a class="header-anchor" href="#electron-vs-web-特性" aria-label="Permalink to &quot;Electron vs Web： 特性&quot;">​</a></h3><div><img src="`+n+`"></div><h4 id="主进程" tabindex="-1">主进程 <a class="header-anchor" href="#主进程" aria-label="Permalink to &quot;主进程&quot;">​</a></h4><p>Electron 运行 package.json 的 main 脚本的进程被称为主进程。</p><p>每个应用只有一个进程。</p><p>管理原生 GUI，典型的窗口（BrowserWindow、Tary、Dock、Menu）。</p><p>创建渲染进程。</p><p>控制应用生命周期（app）。</p><h4 id="渲染进程" tabindex="-1">渲染进程 <a class="header-anchor" href="#渲染进程" aria-label="Permalink to &quot;渲染进程&quot;">​</a></h4><p>展示 Web 页面的进程称为渲染进程。</p><p>通过 Node.js、Electron 提供的 API 可以跟系统底层打交道。</p><p>一个 Electron 应用可以有多个渲染进程。</p><table><thead><tr><th></th><th>API</th></tr></thead><tbody><tr><td>主进程</td><td>app（生命周期）、BorwserWindow（窗口）、ipcMain（跟 ipcRenderer 进行 IPC 通信）、Menu（原生 GUI）、Tray（原生 GUI）、MenuItem（原生 GUI）、dialog（原生 GUI）、Notification（可交互通知）、webContents（加载页面）、autoUpdater（更新模块）、globalShortcut（设置全局快捷键）、systemPerferences、TouchBar、netLog、powserMonitor、ipAppPurchase、net、powserSaveBlocker、contentTracing、BrowserView、session、protocol、Screen</td></tr><tr><td>渲染进程</td><td>ipcRenderer、remote（调用主进程模块）、desktopCapture（捕获桌面流，系统截图，视频流等）、webFrame</td></tr><tr><td>主进程，渲染进程</td><td>clipboard（访问和读写剪切板）、crashPeporter（监控主进程和渲染进程是否存在崩溃）、shell、nativeImage</td></tr></tbody></table><h4 id="进程间通信" tabindex="-1">进程间通信 <a class="header-anchor" href="#进程间通信" aria-label="Permalink to &quot;进程间通信&quot;">​</a></h4><p>通知事件</p><blockquote><p>比如可以通过 IPC 通信让主进程创建原生菜单。</p></blockquote><p>数据传输</p><blockquote><p>在某个页面中获得现在的内存情况，可以通过 IPC 来传输。</p></blockquote><p>共享数据</p><blockquote><p>比如用户信息，在各个进程内都会用到，可以通过 IPC 通信来完成数据的共享。</p></blockquote><h4 id="ipc-模块通信" tabindex="-1">IPC 模块通信 <a class="header-anchor" href="#ipc-模块通信" aria-label="Permalink to &quot;IPC 模块通信&quot;">​</a></h4><p>Electron 提供了 IPC 通信模块，主进程的 ipcMain 和 渲染进程的 ipcRenderer。</p><p>ipMain、ipcRenderer 都是 EventEmitter 对象。</p><h4 id="进程间通信-渲染进程到主进程" tabindex="-1">进程间通信：渲染进程到主进程 <a class="header-anchor" href="#进程间通信-渲染进程到主进程" aria-label="Permalink to &quot;进程间通信：渲染进程到主进程&quot;">​</a></h4><p>Callback 写法：</p><ul><li>ipcRenderer.send(channel, ...args)</li><li>ipcMain.on(channel, handler)</li></ul><p>Promise 写法（Electron 7.0 之后，处理请求和响应模式）</p><ul><li>ipcRenderer.invoke(channel, ...args)</li><li>ipcMain.handle(channel, handler)</li></ul><h4 id="进程间通信-主进程到渲染进程" tabindex="-1">进程间通信：主进程到渲染进程 <a class="header-anchor" href="#进程间通信-主进程到渲染进程" aria-label="Permalink to &quot;进程间通信：主进程到渲染进程&quot;">​</a></h4><p>ipcRenderer.on(channel, handler)</p><p>webContents.send(channel)</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">win.webContents.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;eventName&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">win.webContents.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;eventName&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h4 id="页面间-渲染进程-通信" tabindex="-1">页面间（渲染进程）通信 <a class="header-anchor" href="#页面间-渲染进程-通信" aria-label="Permalink to &quot;页面间（渲染进程）通信&quot;">​</a></h4><p>通知事件：</p><ul><li>通过主进程转发（Electron 5 之前）</li><li>ipcRenderer.sendTo（ELectron 5 之后）</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">ipcRenderer</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">remote</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">winWebContentId</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> remote.</span><span style="color:#B392F0;">getGlobal</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;sharedObject&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ipcRenderer.</span><span style="color:#B392F0;">sendTo</span><span style="color:#E1E4E8;">(winWebContentId, </span><span style="color:#9ECBFF;">&#39;eventName&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">ipcRenderer</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">remote</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">winWebContentId</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> remote.</span><span style="color:#6F42C1;">getGlobal</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;sharedObject&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ipcRenderer.</span><span style="color:#6F42C1;">sendTo</span><span style="color:#24292E;">(winWebContentId, </span><span style="color:#032F62;">&#39;eventName&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span></code></pre></div><p>数据共享：</p><ul><li>Web 技术（localStroage、sessionStroage、indexedDB）</li><li>使用 remote（会将数据挂在一个全局的过程中，不推荐使用）</li></ul><h4 id="经验-技巧" tabindex="-1">经验 &amp; 技巧 <a class="header-anchor" href="#经验-技巧" aria-label="Permalink to &quot;经验 &amp; 技巧&quot;">​</a></h4><p>少用 remote 模块。</p><blockquote><p>每次 remote 会触发底层的同步 IPC 事件，影响性能，如果处理不好，可能会卡死。</p></blockquote><p>不要用 sync 模式。</p><p>请求 + 响应的通信模式下，需要自定义超时限制。</p><h4 id="electron-原生能力" tabindex="-1">Electron 原生能力 <a class="header-anchor" href="#electron-原生能力" aria-label="Permalink to &quot;Electron 原生能力&quot;">​</a></h4><p>Electron 原生能力主要来自其内置的 Native API 以及 NodeJS。</p><img src="`+E+'"><p><strong>Electron API 原生 GUI：</strong></p><ul><li>BrowserWindow 应用窗口</li><li>Tray 托盘</li><li>app 设置 dock.badge</li><li>Menu 菜单</li><li>dialog 原生弹窗</li><li>TouchBar 苹果触控栏</li><li>。。。</li></ul><p><strong>Electron API 底层能力：</strong></p><ul><li>clipboard 剪切板</li><li>globalShortcut 全局快捷键</li><li>desktopCapture 捕获桌面</li><li>shell 打开文件、URL</li><li>。。。</li></ul><p><strong>Node.js 底层能力：</strong></p><p>Electron 同时在主进程和渲染进程中对 Node.js 暴露了所有的接口。</p><ul><li>fs 进行文件读写</li><li>crypto 进行加解密</li></ul><p>通过 npm 安装即可引入社区上所有的 Node.js 库。</p><blockquote><p>渲染进程中可以使用 Node.js 库。</p></blockquote><p><strong>Node.js 原生模块：</strong></p><ul><li>node.js add-on</li><li>node-ffi（Foreign Function Interface）</li></ul><blockquote><p>可以使用 NodeJS 的插件机制去集成 C++。</p><p>可以使用 node-ffi 去集成业务中的一些动态库。比如打印等应用场景。</p></blockquote><ul><li>WinRT（<a href="https://github.com/NodeRT/NodeRT%EF%BC%89" target="_blank" rel="noreferrer">https://github.com/NodeRT/NodeRT）</a></li><li>Applescript（<a href="https://github.com/TooTallNate/node-applescript%EF%BC%89" target="_blank" rel="noreferrer">https://github.com/TooTallNate/node-applescript）</a></li><li>Shell（node.js child_process）</li><li>。。。</li></ul><h4 id="electron-能做什么" tabindex="-1">Electron 能做什么 <a class="header-anchor" href="#electron-能做什么" aria-label="Permalink to &quot;Electron 能做什么&quot;">​</a></h4><blockquote><p>Electron 运行在高版本的 Chromium 上。</p></blockquote><p><strong>无兼容问题：</strong></p><ul><li>不用考虑 Safari、IE 上的表现差异</li><li>可以使用 Chrome 浏览器最新的 feature</li><li>babel 中设置 targets 为 Electron 对应的 Chrome 版本</li></ul><blockquote><p>比如最新浏览器已经支持纯天然的 LazyLoad。</p></blockquote><blockquote><p><a href="https://developers.google.com/web/updates" target="_blank" rel="noreferrer">https://developers.google.com/web/updates</a> 查看 chrome 更新特性。</p></blockquote><p><strong>ES 6/7/8/9/10 高级语法</strong></p><ul><li>Async await、Promise</li><li>String、Array、Object 等高级用法</li><li>BigInt</li></ul><p><strong>无跨域问题</strong></p><ul><li>使用 Node.js 发送请求</li><li>使用 Electron net 发送请求</li></ul><p><strong>操作本地文件</strong></p><p><strong>本地 DB</strong></p><p><strong>多线程、多进程并行</strong></p><p><strong>。。。</strong></p><h3 id="electron-总结" tabindex="-1">Electron 总结 <a class="header-anchor" href="#electron-总结" aria-label="Permalink to &quot;Electron 总结&quot;">​</a></h3><ul><li>无浏览器兼容问题</li><li>最新浏览器 Feature</li><li>No PolyFill</li><li>ES 高级语法</li><li>无跨域问题</li><li>Powered by Node.js</li></ul><h2 id="二、实现远程控制软件" tabindex="-1">二、实现远程控制软件 <a class="header-anchor" href="#二、实现远程控制软件" aria-label="Permalink to &quot;二、实现远程控制软件&quot;">​</a></h2><h3 id="需求分析" tabindex="-1">需求分析 <a class="header-anchor" href="#需求分析" aria-label="Permalink to &quot;需求分析&quot;">​</a></h3><h4 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h4><p>提供软件服务时在复杂情况下（如排查问题、演示功能），通过沟通解决非常低效。</p><h4 id="目标" tabindex="-1">目标 <a class="header-anchor" href="#目标" aria-label="Permalink to &quot;目标&quot;">​</a></h4><p>希望迅速为客户提供远程协助，能够远程控制用户电脑，提供点击和键入功能，完成排查故障、演示场景。</p><h4 id="业务流程" tabindex="-1">业务流程 <a class="header-anchor" href="#业务流程" aria-label="Permalink to &quot;业务流程&quot;">​</a></h4><p>角色：</p><ul><li>控制端：客服人员、研发人员</li><li>傀儡端：用户</li></ul><p>流程：</p><ol><li>傀儡端告诉控制端本机控制码</li><li>控制端输入控制码连接傀儡端</li><li>傀儡端将捕获的画面传至控制器</li><li>控制端的鼠标和键盘指令传送至傀儡端</li><li>傀儡端响应控制端</li></ol><h3 id="项目分析" tabindex="-1">项目分析 <a class="header-anchor" href="#项目分析" aria-label="Permalink to &quot;项目分析&quot;">​</a></h3><p><strong>傀儡端告诉控制端本机控制码。</strong></p><p>建立端与控制码的联系 -&gt; 服务端需求</p><p><strong>控制端输入控制码连接傀儡端</strong></p><p>通过控制码找到用户 -&gt; 服务端需求</p><p>建立用户间连接 -&gt; 服务端需求 or 客户端需求</p><p><strong>傀儡端将捕获的画面传至控制器</strong></p><p>捕获画面、播放画面 -&gt; 客户端需求</p><p>用户间画面传输 -&gt; 服务端需求/客户端需求</p><p><strong>控制端的鼠标和键盘指令传送至傀儡端</strong></p><p>捕获指令 -&gt; 客户端指令</p><p>用户间指令传输 -&gt; 服务端需求/客户端需求</p><p><strong>指令传送至傀儡端</strong></p><p>响应指令 -&gt; 客户端需求</p><h3 id="需求汇总" tabindex="-1">需求汇总 <a class="header-anchor" href="#需求汇总" aria-label="Permalink to &quot;需求汇总&quot;">​</a></h3><img src="'+y+'"><h3 id="可行性分析" tabindex="-1">可行性分析 <a class="header-anchor" href="#可行性分析" aria-label="Permalink to &quot;可行性分析&quot;">​</a></h3><h4 id="如何捕获画面" tabindex="-1">如何捕获画面 <a class="header-anchor" href="#如何捕获画面" aria-label="Permalink to &quot;如何捕获画面&quot;">​</a></h4><p>Electron desktopCapturer。</p><blockquote><p>通过 [navigator.mediaDevices.getUserMedia] API，可以访问用于从桌面上捕获音频和视频的媒体源信息。</p></blockquote><p>进程：Renderer</p><h4 id="如何建立连接、画面-指令传输" tabindex="-1">如何建立连接、画面 + 指令传输 <a class="header-anchor" href="#如何建立连接、画面-指令传输" aria-label="Permalink to &quot;如何建立连接、画面 + 指令传输&quot;">​</a></h4><p>Web Real-Time Communications。</p><blockquote><p>WebRTC 是网页浏览器用来进行语音对话视频对话的 API。现在被广泛的使用在直播、视频、会议等场景。</p></blockquote><img src="'+i+'"><h4 id="如何响应用户指令" tabindex="-1">如何响应用户指令 <a class="header-anchor" href="#如何响应用户指令" aria-label="Permalink to &quot;如何响应用户指令&quot;">​</a></h4><p>robotjs。</p><h3 id="项目架构与基础业务" tabindex="-1">项目架构与基础业务 <a class="header-anchor" href="#项目架构与基础业务" aria-label="Permalink to &quot;项目架构与基础业务&quot;">​</a></h3><h4 id="目录架构" tabindex="-1">目录架构 <a class="header-anchor" href="#目录架构" aria-label="Permalink to &quot;目录架构&quot;">​</a></h4><img src="'+u+`"><h4 id="与-react-框架结合" tabindex="-1">与 React 框架结合 <a class="header-anchor" href="#与-react-框架结合" aria-label="Permalink to &quot;与 React 框架结合&quot;">​</a></h4><ul><li>编写 React，并且编译它。CRA 其实是一个好的选择。</li><li>处理引入 electron/node 模块。 <ul><li>webpack 配置</li><li>window.require</li></ul></li><li>windows 根据环境信息加载本地或者 devServer url <ul><li>electron-is-dev</li></ul></li><li>启动命令配置。编译成功再启动 Electron。 <ul><li>concurently</li><li>wait on</li></ul></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npx create</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">react</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">app main </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">use</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">npm</span></span>
<span class="line"><span style="color:#E1E4E8;">npm i cross</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">env </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;start&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;cross-env BROWSER=none react-scripts start&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npx create</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">react</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">app main </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">use</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">npm</span></span>
<span class="line"><span style="color:#24292E;">npm i cross</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">env </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;start&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;cross-env BROWSER=none react-scripts start&quot;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">cnpm i electron </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">cnpm i electron </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><p><strong>处理环境问题。</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm i electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">is</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm i electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">is</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isDev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron-is-dev&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;path&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> win;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ready&#39;</span><span style="color:#E1E4E8;">, () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  win </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BrowserWindow</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">    width: </span><span style="color:#79B8FF;">600</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    height: </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    webPreferences: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      nodeIntegration: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isDev) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    win.</span><span style="color:#B392F0;">loadURL</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;http://localhost:3000&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    win.</span><span style="color:#B392F0;">loadFile</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">resolve</span><span style="color:#E1E4E8;">(__dirname, </span><span style="color:#9ECBFF;">&#39;../renderer/views/main/index.html&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isDev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron-is-dev&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">path</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;path&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> win;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ready&#39;</span><span style="color:#24292E;">, () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  win </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BrowserWindow</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">    width: </span><span style="color:#005CC5;">600</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    height: </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    webPreferences: {</span></span>
<span class="line"><span style="color:#24292E;">      nodeIntegration: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isDev) {</span></span>
<span class="line"><span style="color:#24292E;">    win.</span><span style="color:#6F42C1;">loadURL</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;http://localhost:3000&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    win.</span><span style="color:#6F42C1;">loadFile</span><span style="color:#24292E;">(path.</span><span style="color:#6F42C1;">resolve</span><span style="color:#24292E;">(__dirname, </span><span style="color:#032F62;">&#39;../renderer/views/main/index.html&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p><strong>处理渲染进程引用 electron 问题</strong></p><p>最新版本的坑。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">win </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BrowserWindow</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  width: </span><span style="color:#79B8FF;">600</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  height: </span><span style="color:#79B8FF;">300</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  webPreferences: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    nodeIntegration: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    contextIsolation: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 最新的版本的坑</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">win </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BrowserWindow</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  width: </span><span style="color:#005CC5;">600</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  height: </span><span style="color:#005CC5;">300</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  webPreferences: {</span></span>
<span class="line"><span style="color:#24292E;">    nodeIntegration: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    contextIsolation: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 最新的版本的坑</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>window.require。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">ipcRenderer</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> window.</span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;electron&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">ipcRenderer</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> window.</span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;electron&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>修改 webpack 的 target（如果是大型项目，可以考虑自己搭建一套 webpack 环境）。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm i customize</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cra react</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">app</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">rewired </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm i customize</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cra react</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">app</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">rewired </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;start&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;cross-env BROWSER=none react-app-rewired start&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;start&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;cross-env BROWSER=none react-app-rewired start&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">override</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;customize-cra&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addRendererTarget</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">config</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  config.target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;electron-renderer&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> config;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">override</span><span style="color:#E1E4E8;">(addRendererTarget);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">override</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;customize-cra&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addRendererTarget</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">config</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  config.target </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;electron-renderer&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> config;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">override</span><span style="color:#24292E;">(addRendererTarget);</span></span></code></pre></div><p><strong>处理调用命令问题</strong></p><p>wait-on 等待资源、sockts、http、文件准备好才触发命令。</p><p>concurrently 用来并行两个命令的执行。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm i wait</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">on concurrently </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm i wait</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">on concurrently </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><p>可以使用 start 命令并行执行 start:main 和 start:render 两个命令。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;start&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;concurrently </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">npm run start:render</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">wait-on http://localhost:3000 &amp;&amp; npm run start:main</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;start:main&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;electron app/main/index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;start:render&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;cd app/renderer/src &amp;&amp; npm start&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;start&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;concurrently </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">npm run start:render</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">wait-on http://localhost:3000 &amp;&amp; npm run start:main</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> &quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;start:main&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;electron app/main/index.js&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;start:render&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;cd app/renderer/src &amp;&amp; npm start&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="其他模板选择" tabindex="-1">其他模板选择 <a class="header-anchor" href="#其他模板选择" aria-label="Permalink to &quot;其他模板选择&quot;">​</a></h4><ul><li>electron-react-boilerplate</li><li>electron-vue</li><li>svelte-template-electron</li><li>angular-electron</li></ul><h3 id="主页面基础业务-real-world-pic" tabindex="-1">主页面基础业务：Real World PIC <a class="header-anchor" href="#主页面基础业务-real-world-pic" aria-label="Permalink to &quot;主页面基础业务：Real World PIC&quot;">​</a></h3><h4 id="基础业务页面" tabindex="-1">基础业务页面 <a class="header-anchor" href="#基础业务页面" aria-label="Permalink to &quot;基础业务页面&quot;">​</a></h4><ul><li>获取自身控制码</li><li>发起控制：文本框 + 确认按钮</li><li>连接状态：未连接、正在连接屏幕、屏幕被控制中</li><li>确认按钮点击后创建控制屏幕窗口</li></ul><h4 id="ipc-通信" tabindex="-1">IPC 通信 <a class="header-anchor" href="#ipc-通信" aria-label="Permalink to &quot;IPC 通信&quot;">​</a></h4><p>渲染进程请求 + 主进程响应（获取自己的控制码）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ipcRender.invoke、ipcMain.handle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ipcRender.invoke、ipcMain.handle</span></span></code></pre></div><p>主进程推送（告知状态）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">webContents.send、ipcRenderer.on</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">webContents.send、ipcRenderer.on</span></span></code></pre></div><p>渲染进程发起请求（申请控制）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ipcRenderer.send、ipcMain.on</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ipcRenderer.send、ipcMain.on</span></span></code></pre></div><h3 id="捕获桌面视频流" tabindex="-1">捕获桌面视频流 <a class="header-anchor" href="#捕获桌面视频流" aria-label="Permalink to &quot;捕获桌面视频流&quot;">​</a></h3><h4 id="mediastram-api" tabindex="-1">MediaStram API <a class="header-anchor" href="#mediastram-api" aria-label="Permalink to &quot;MediaStram API&quot;">​</a></h4><p>媒体的流。</p><p>一个流对象可以包含多轨道，包括音频和视频轨道等。</p><p>能通过 WebRTC 传输。</p><p>通过 &lt;video&gt; 标签可以播放。</p><h4 id="如何捕获媒体流" tabindex="-1">如何捕获媒体流 <a class="header-anchor" href="#如何捕获媒体流" aria-label="Permalink to &quot;如何捕获媒体流&quot;">​</a></h4><p>navigator.mediaDevices.getUserMedia(MediaStreamConstraints)</p><p>返回：Promise，成功后 resolve 回调一个 MediaStream 实例对象。</p><p>参数：MediaStreamConstraints。</p>`,249),C=s("ul",null,[s("li",null,[s("p",null,"audio: Boolean | MediaTrackConstraints")]),s("li",null,[s("p",null,"video: Boolean | MediaTrackConstraints"),s("ul",null,[s("li",null,"width: 分辨率"),s("li",null,"height：分辨率"),s("li",{"ideal:":"","10,":"","max:":"",15:""},"frameRate：帧率，比如"),s("li",null,"。。。")])])],-1),b=a(`<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">navigator.mediaDevices.</span><span style="color:#B392F0;">getUserMedia</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  audio: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  video: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    width: { min: </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">, ideal: </span><span style="color:#79B8FF;">1280</span><span style="color:#E1E4E8;">, max: </span><span style="color:#79B8FF;">1920</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    height: { min: </span><span style="color:#79B8FF;">576</span><span style="color:#E1E4E8;">, ideal: </span><span style="color:#79B8FF;">720</span><span style="color:#E1E4E8;">, max: </span><span style="color:#79B8FF;">1080</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    frameRate: { max: </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">navigator.mediaDevices.</span><span style="color:#6F42C1;">getUserMedia</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  audio: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  video: {</span></span>
<span class="line"><span style="color:#24292E;">    width: { min: </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">, ideal: </span><span style="color:#005CC5;">1280</span><span style="color:#24292E;">, max: </span><span style="color:#005CC5;">1920</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    height: { min: </span><span style="color:#005CC5;">576</span><span style="color:#24292E;">, ideal: </span><span style="color:#005CC5;">720</span><span style="color:#24292E;">, max: </span><span style="color:#005CC5;">1080</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    frameRate: { max: </span><span style="color:#005CC5;">30</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h4 id="如何播放媒体流对象" tabindex="-1">如何播放媒体流对象 <a class="header-anchor" href="#如何播放媒体流对象" aria-label="Permalink to &quot;如何播放媒体流对象&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">video</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;video&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">video.srcObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> stream;</span></span>
<span class="line"><span style="color:#E1E4E8;">video.</span><span style="color:#B392F0;">onloadedmetadata</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  video.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">video</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;video&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">video.srcObject </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> stream;</span></span>
<span class="line"><span style="color:#24292E;">video.</span><span style="color:#6F42C1;">onloadedmetadata</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  video.</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="如何捕获桌面-窗口流" tabindex="-1">如何捕获桌面/窗口流 <a class="header-anchor" href="#如何捕获桌面-窗口流" aria-label="Permalink to &quot;如何捕获桌面/窗口流&quot;">​</a></h4><p>desktopCapturer.getSources({ types: [&#39;window&#39;, &#39;screen&#39;] }) 提取 chromeMediaSourceId</p><ul><li>Electron &lt; 5.0 是 callback 调用</li><li>5.0 后是 promise，返回的是 chromeMediaSources 列表，包含 id、name、thumbnail、display_id</li></ul><p>通过 navigator.webkitGetUserMedia({})</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">navigator.</span><span style="color:#B392F0;">webkitGetUserMedia</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  audio: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  video: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    mandatory: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      chromeMediaSource: </span><span style="color:#9ECBFF;">&#39;desktop&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      chromeMediaSourceId: sources[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].id,</span></span>
<span class="line"><span style="color:#E1E4E8;">      maxWidth: width,</span></span>
<span class="line"><span style="color:#E1E4E8;">      maxHeight: height</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}, (</span><span style="color:#FFAB70;">stream</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  peer.</span><span style="color:#B392F0;">emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;add-stream&#39;</span><span style="color:#E1E4E8;">, stream);</span></span>
<span class="line"><span style="color:#E1E4E8;">}, (</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;get media failed：&#39;</span><span style="color:#E1E4E8;">, err);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">navigator.</span><span style="color:#6F42C1;">webkitGetUserMedia</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  audio: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  video: {</span></span>
<span class="line"><span style="color:#24292E;">    mandatory: {</span></span>
<span class="line"><span style="color:#24292E;">      chromeMediaSource: </span><span style="color:#032F62;">&#39;desktop&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      chromeMediaSourceId: sources[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].id,</span></span>
<span class="line"><span style="color:#24292E;">      maxWidth: width,</span></span>
<span class="line"><span style="color:#24292E;">      maxHeight: height</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}, (</span><span style="color:#E36209;">stream</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  peer.</span><span style="color:#6F42C1;">emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;add-stream&#39;</span><span style="color:#24292E;">, stream);</span></span>
<span class="line"><span style="color:#24292E;">}, (</span><span style="color:#E36209;">err</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;get media failed：&#39;</span><span style="color:#24292E;">, err);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="如何接收、响应指令" tabindex="-1">如何接收、响应指令 <a class="header-anchor" href="#如何接收、响应指令" aria-label="Permalink to &quot;如何接收、响应指令&quot;">​</a></h3><h4 id="robot-js" tabindex="-1">robot.js <a class="header-anchor" href="#robot-js" aria-label="Permalink to &quot;robot.js&quot;">​</a></h4><ul><li>用于控制鼠标、键盘</li><li>Node.js、C++、add-on 库</li><li>支持 Mac、Windows、Linux</li></ul><h4 id="安装、基本使用" tabindex="-1">安装、基本使用 <a class="header-anchor" href="#安装、基本使用" aria-label="Permalink to &quot;安装、基本使用&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">global </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">production windows</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">build</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">tools</span></span>
<span class="line"><span style="color:#E1E4E8;">npm config set python </span><span style="color:#B392F0;">E</span><span style="color:#E1E4E8;">:\\Install\\python27\\python.exe</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">global </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">production windows</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">build</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">tools</span></span>
<span class="line"><span style="color:#24292E;">npm config set python </span><span style="color:#6F42C1;">E</span><span style="color:#24292E;">:\\Install\\python27\\python.exe</span></span></code></pre></div><blockquote><p>需要 python 2.7 支持，配置其环境变量。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> sys</span></span>
<span class="line"><span style="color:#E1E4E8;">reload(sys)</span></span>
<span class="line"><span style="color:#E1E4E8;">sys.setdefaultencoding(</span><span style="color:#9ECBFF;">&quot;gbk&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sys</span></span>
<span class="line"><span style="color:#24292E;">reload(sys)</span></span>
<span class="line"><span style="color:#24292E;">sys.setdefaultencoding(</span><span style="color:#032F62;">&quot;gbk&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install robotjs </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install robotjs </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><p>鼠标移动：robot.moveMouse(x, y)</p><p>鼠标点击：mouseClick([button], [double])</p><p>按键：robot.keyTap(key, [modifier])</p><p>详细文档：<a href="https://robotjs.io/docs/syntax" target="_blank" rel="noreferrer">https://robotjs.io/docs/syntax</a>。</p><h4 id="编译原生模块" tabindex="-1">编译原生模块 <a class="header-anchor" href="#编译原生模块" aria-label="Permalink to &quot;编译原生模块&quot;">​</a></h4><p>手动编译</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm rebuild </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">runtime</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">electron </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">disturl</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">https</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//atom.io/download/atom-shell --target=&lt;electron版本&gt; --abi=&lt;对应版本abi&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm rebuild </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">runtime</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">electron </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">disturl</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">https</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//atom.io/download/atom-shell --target=&lt;electron版本&gt; --abi=&lt;对应版本abi&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">process.versions.electron 可以看到 electron 版本</span></span>
<span class="line"><span style="color:#E1E4E8;">process.versions.node 可以看到 node 版本，之后再 abi_crosswalk 查找 abi</span></span>
<span class="line"><span style="color:#B392F0;">https</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//github.com/mapbox/node-pre-gyp/blob/master/lib/util/abi_crosswalk.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">process.versions</span></span>
<span class="line"><span style="color:#E1E4E8;">electron </span><span style="color:#79B8FF;">12.0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">  node </span><span style="color:#79B8FF;">14.16</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">83</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">npm rebuild </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">runtime</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">electron </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">disturl</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">https</span><span style="color:#E1E4E8;">:</span><span style="color:#6A737D;">//atom.io/download/atom-shell --target=12.0.2 --abi=83</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">process.versions.electron 可以看到 electron 版本</span></span>
<span class="line"><span style="color:#24292E;">process.versions.node 可以看到 node 版本，之后再 abi_crosswalk 查找 abi</span></span>
<span class="line"><span style="color:#6F42C1;">https</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//github.com/mapbox/node-pre-gyp/blob/master/lib/util/abi_crosswalk.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">process.versions</span></span>
<span class="line"><span style="color:#24292E;">electron </span><span style="color:#005CC5;">12.0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">  node </span><span style="color:#005CC5;">14.16</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">83</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">npm rebuild </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">runtime</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">electron </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">disturl</span><span style="color:#D73A49;">=</span><span style="color:#6F42C1;">https</span><span style="color:#24292E;">:</span><span style="color:#6A737D;">//atom.io/download/atom-shell --target=12.0.2 --abi=83</span></span></code></pre></div><p>electron-rebuild</p><blockquote><p>自动编译的库必须在 dependencies 而不是 devDependencies 中。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">rebuild </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"><span style="color:#E1E4E8;">npx electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">rebuild</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">rebuild </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"><span style="color:#24292E;">npx electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">rebuild</span></span></code></pre></div><blockquote><p>调出快捷键 ctrl + shift + i。</p></blockquote><p>经过测试，手动编译比较靠谱。</p><h4 id="监听键盘-鼠标事件" tabindex="-1">监听键盘 + 鼠标事件 <a class="header-anchor" href="#监听键盘-鼠标事件" aria-label="Permalink to &quot;监听键盘 + 鼠标事件&quot;">​</a></h4><p>window.onkeydown。</p><p>window.onmouseup。</p><p>细节：</p><ul><li>modifier（修饰键）处理：shift、ctrl、alt、meta（win/command）</li><li>按键转换（vkey）</li></ul><blockquote><p>vkey 可以完成 keycode 和 key 的转换。</p></blockquote><p>鼠标位置缩放（按比例）</p><ul><li>x&#39; = x * videoWidth / screenWidth</li><li>y&#39; = y * videoHeight / screenHeight</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm i vkey </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm i vkey </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><p>可以利用 Electron globalShortcut 模块完成监听 + 响应打开控制台需求。</p><ul><li>Mac 打开控制台命令：CMD + OPTIONS + I</li><li>Windows 打开控制台命令：CTRL + SHIFT + I</li></ul><h3 id="webrtc-传输视频流" tabindex="-1">WebRTC 传输视频流 <a class="header-anchor" href="#webrtc-传输视频流" aria-label="Permalink to &quot;WebRTC 传输视频流&quot;">​</a></h3><img src="`+d+'"><h4 id="sdp" tabindex="-1">SDP <a class="header-anchor" href="#sdp" aria-label="Permalink to &quot;SDP&quot;">​</a></h4><p>SDP （Session Description Protocol）是一种会话描述协议，用来描述多媒体会话，主要用来协商双方通讯过程，传递基本信息。</p><p>SDP 的格式包含多行，每行为 <code>&lt;type&gt;=&lt;value&gt;</code>。</p><ul><li><code>&lt;type&gt;</code>: 字符，代表特定的属性，比如 v，代表版本。</li><li><code>&lt;value&gt;</code>: 结构化文本，格式与属性类型无关，UTF8 编码。</li></ul><blockquote><p>图中的 answer 和 offer 其实本质是就是一个 SDP。</p></blockquote><h4 id="p2p" tabindex="-1">P2P <a class="header-anchor" href="#p2p" aria-label="Permalink to &quot;P2P&quot;">​</a></h4><p>p2p 通常有两种模式，Served-Based 和 P2P。</p><p>P2P的难题：</p><ul><li><p>NAT（Network Address Translation）网络地址转换。</p></li><li><p>如何获得真正的 IP 和 端口。</p></li></ul><h4 id="nat-穿透-ice" tabindex="-1">NAT 穿透：ICE <a class="header-anchor" href="#nat-穿透-ice" aria-label="Permalink to &quot;NAT 穿透：ICE&quot;">​</a></h4><p>ICE（Interactive Connectivity Establishment）交互式连接创建。</p><ul><li>优先 STUN（Session Traversal Utilities for NAT），NAT 会话穿越应用程序</li><li>备选 TURN（Traversal Using Relay NAT），中继 NAT 实现的穿透 <ul><li>Full Cone NAT - 完全雏形 NAT</li><li>Restricted Cone NAT - 限制雏形 NAT</li><li>Port Restrict Cone NAT 端口限制雏形 NAT</li><li>Synmetric NAT 对称 NAT</li></ul></li></ul><h3 id="信令服务-连接两端" tabindex="-1">信令服务：连接两端 <a class="header-anchor" href="#信令服务-连接两端" aria-label="Permalink to &quot;信令服务：连接两端&quot;">​</a></h3><h4 id="信令服务是什么" tabindex="-1">信令服务是什么 <a class="header-anchor" href="#信令服务是什么" aria-label="Permalink to &quot;信令服务是什么&quot;">​</a></h4><p>WebRTC 客户端（对等端）之间传递消息的服务器。</p><h4 id="信令服务有啥用" tabindex="-1">信令服务有啥用 <a class="header-anchor" href="#信令服务有啥用" aria-label="Permalink to &quot;信令服务有啥用&quot;">​</a></h4><p>转发各种 SDP、Candidate。</p><img src="'+F+`"><h4 id="服务端需求" tabindex="-1">服务端需求 <a class="header-anchor" href="#服务端需求" aria-label="Permalink to &quot;服务端需求&quot;">​</a></h4><p>处理业务逻辑</p><ul><li>建立端与控制码的联系</li><li>通过控制码找到用户</li></ul><p>转发 offer SDP、answer SDP、iceCandidate</p><ul><li>处理客户端请求</li><li>主动推送消息给客户端</li></ul><table><thead><tr><th></th><th>短轮询</th><th>长轮询</th><th>WebSocket</th><th>sse</th></tr></thead><tbody><tr><td>通讯方式</td><td>http</td><td>http</td><td>基于 TCP 长连接通讯</td><td>http</td></tr><tr><td>触发方式</td><td>轮询</td><td>轮询</td><td>事件</td><td>事件</td></tr><tr><td>优点</td><td>简单、兼容性好</td><td>相对短轮询资源占用少全双工通讯、性能好，安全，扩展性</td><td>全双工通讯，性能好，安全，扩展性</td><td>实现简单，开发成本低</td></tr><tr><td>缺点</td><td>安全性差、资源占用高</td><td>安全性差、资源占用高</td><td>传输数据进行进行二次解析，有一定开发门槛</td><td>适用于高级浏览器</td></tr><tr><td>适用范围</td><td>B/S 服务</td><td>B/S 服务</td><td>网游、支持、IM 等</td><td>服务端到客户端推送（新消息推送）</td></tr></tbody></table><h4 id="服务端实现-websocket-服务器" tabindex="-1">服务端实现 WebSocket 服务器 <a class="header-anchor" href="#服务端实现-websocket-服务器" aria-label="Permalink to &quot;服务端实现 WebSocket 服务器&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm i ws </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm i ws </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">WebSocket</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ws&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">wss</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> WebSocket.</span><span style="color:#B392F0;">Server</span><span style="color:#E1E4E8;">({ port: </span><span style="color:#79B8FF;">8081</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">wss.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">ws</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">req</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	ws.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {});</span></span>
<span class="line"><span style="color:#E1E4E8;">    ws.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;close&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {});</span></span>
<span class="line"><span style="color:#E1E4E8;">    ws.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(); </span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">WebSocket</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ws&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">wss</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> WebSocket.</span><span style="color:#6F42C1;">Server</span><span style="color:#24292E;">({ port: </span><span style="color:#005CC5;">8081</span><span style="color:#24292E;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">wss.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;connection&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">ws</span><span style="color:#24292E;">, </span><span style="color:#E36209;">req</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	ws.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;message&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {});</span></span>
<span class="line"><span style="color:#24292E;">    ws.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;close&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {});</span></span>
<span class="line"><span style="color:#24292E;">    ws.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(); </span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><blockquote><p>可以使用 <a href="https://websocket.org/echo.html" target="_blank" rel="noreferrer">https://websocket.org/echo.html</a> 测试 socket 连接。</p></blockquote><h4 id="业务逻辑处理" tabindex="-1">业务逻辑处理 <a class="header-anchor" href="#业务逻辑处理" aria-label="Permalink to &quot;业务逻辑处理&quot;">​</a></h4><ul><li>建立端与控制码的联系</li><li>通过控制码找到用户</li></ul><h4 id="客户端使用-websocket" tabindex="-1">客户端使用 WebSocket <a class="header-anchor" href="#客户端使用-websocket" aria-label="Permalink to &quot;客户端使用 WebSocket&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ws</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;address&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ws.onopen </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">funnction</span><span style="color:#E1E4E8;"> (e) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ws.onmessage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">funnction</span><span style="color:#E1E4E8;"> (e) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ws.onclose </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">funnction</span><span style="color:#E1E4E8;"> (e) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 文本、blob、ArrayBuffer</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ws</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSocket</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;address&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ws.onopen </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">funnction</span><span style="color:#24292E;"> (e) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ws.onmessage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">funnction</span><span style="color:#24292E;"> (e) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ws.onclose </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">funnction</span><span style="color:#24292E;"> (e) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 文本、blob、ArrayBuffer</span></span></code></pre></div><p>electron 可以选择 ws 库，需要在主进程创建。</p><p>。。。。</p><h2 id="三、electron-工程化" tabindex="-1">三、Electron 工程化 <a class="header-anchor" href="#三、electron-工程化" aria-label="Permalink to &quot;三、Electron 工程化&quot;">​</a></h2><h3 id="electron-打包" tabindex="-1">Electron 打包 <a class="header-anchor" href="#electron-打包" aria-label="Permalink to &quot;Electron 打包&quot;">​</a></h3><h4 id="打包过程分析" tabindex="-1">打包过程分析 <a class="header-anchor" href="#打包过程分析" aria-label="Permalink to &quot;打包过程分析&quot;">​</a></h4><p>下载 HTML 文件</p><ul><li>Info.plist</li><li>Frameworks</li><li>Resources</li></ul><p>添加业务代码</p><p>修改文件信息</p><ul><li>app 名称</li><li>Info.plist 修改信息</li><li>设置图标</li><li>...</li></ul><p>制作镜像</p><ul><li>dmg-builder</li><li>nsis</li></ul><h4 id="打包工具" tabindex="-1">打包工具 <a class="header-anchor" href="#打包工具" aria-label="Permalink to &quot;打包工具&quot;">​</a></h4><table><thead><tr><th></th><th>electron-builder</th><th>electron-forge</th></tr></thead><tbody><tr><td>签名</td><td>√√√</td><td>√√√</td></tr><tr><td>安装包类型</td><td>√√√</td><td>√√√</td></tr><tr><td>原生模块编译</td><td>√√√</td><td>√√√</td></tr><tr><td>定制化</td><td>√√√</td><td>√</td></tr><tr><td>上手成本</td><td>√√</td><td>√</td></tr><tr><td>boilerplate</td><td>×</td><td>√√√</td></tr><tr><td>跨平台构建</td><td>Linux、Windows</td><td>×</td></tr><tr><td>社区活跃度</td><td>√√√</td><td>√√</td></tr><tr><td>场景</td><td>打包和发布的完整解决方案，基本适用所有场景</td><td>创建到发布的一体化解决方案，适合从 0 到 1 的项目</td></tr></tbody></table><h4 id="打包准备" tabindex="-1">打包准备 <a class="header-anchor" href="#打包准备" aria-label="Permalink to &quot;打包准备&quot;">​</a></h4><p>证书</p><ul><li>Mac：开发者证书 99$</li><li>Windows：赛马铁克、WoSign</li></ul><p>对应系统机器（Mac、Windows、Linux）</p><p>软件所需图片</p><h4 id="软件图片" tabindex="-1">软件图片 <a class="header-anchor" href="#软件图片" aria-label="Permalink to &quot;软件图片&quot;">​</a></h4><p>Mac</p><ul><li>软件图标。icns 格式。通过 image2icon 或者 iconutil 生成</li><li>dmg 背景图</li><li>安装包图标（可选）</li></ul><p>Windows</p><ul><li>ico</li><li>installerIcon（可选）</li><li>unInstallerIcon（可选）</li></ul><h4 id="iconutil-生成-icns" tabindex="-1">iconutil 生成 icns <a class="header-anchor" href="#iconutil-生成-icns" aria-label="Permalink to &quot;iconutil 生成 icns&quot;">​</a></h4><ol><li>准备 logo 图 1024 * 1024 的两倍图，png 格式</li><li>生成 16 到 1024 的图片</li><li>iconutil -c icns icons.iconset -o icon.icns</li></ol><p>准备图片。</p><p>建立 icons.iconset 目录。</p><h4 id="electron-bulider-安装、使用" tabindex="-1">electron-bulider 安装、使用 <a class="header-anchor" href="#electron-bulider-安装、使用" aria-label="Permalink to &quot;electron-bulider 安装、使用&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">global </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">production windows</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">build</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">tools </span><span style="color:#6A737D;">//管理员启动 cmd 安装（windows）</span></span>
<span class="line"><span style="color:#E1E4E8;">npm i electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">builder </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"><span style="color:#E1E4E8;">npm i cross</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">env </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">corss</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">env npm_config_electron_mirror</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://npm.taobao.org/mirrors/electron/&quot;</span><span style="color:#E1E4E8;"> electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">builder build </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">mac</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">corss</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">env npm_config_electron_mirror</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;https://npm.taobao.org/mirrors/electron/&quot;</span><span style="color:#E1E4E8;"> electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">builder build </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">win </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">ia32</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">global </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">production windows</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">build</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">tools </span><span style="color:#6A737D;">//管理员启动 cmd 安装（windows）</span></span>
<span class="line"><span style="color:#24292E;">npm i electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">builder </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"><span style="color:#24292E;">npm i cross</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">env </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">corss</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">env npm_config_electron_mirror</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://npm.taobao.org/mirrors/electron/&quot;</span><span style="color:#24292E;"> electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">builder build </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">mac</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">corss</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">env npm_config_electron_mirror</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;https://npm.taobao.org/mirrors/electron/&quot;</span><span style="color:#24292E;"> electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">builder build </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">win </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">ia32</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm remove electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">rebuild</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// package.json 加入 &quot;postinstall&quot;: &quot;electron-builder install-app-deps&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">npm install electron</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">builder</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">squirrel</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">windows</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm remove electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">rebuild</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// package.json 加入 &quot;postinstall&quot;: &quot;electron-builder install-app-deps&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">npm install electron</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">builder</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">squirrel</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">windows</span></span></code></pre></div><h4 id="electron-builder-打包配置" tabindex="-1">electron-builder 打包配置 <a class="header-anchor" href="#electron-builder-打包配置" aria-label="Permalink to &quot;electron-builder 打包配置&quot;">​</a></h4><p>配置文件</p><ul><li>package.json 加入 build 属性</li><li>存放在 electron-builder.yml （）可选</li></ul><p>配置项</p><ul><li>公共配置 appId、produceName、copyright、asar、files、directories</li><li>各平台配置</li></ul><p>文档：<a href="https://www.electron.build/configuration/configuration#configuration" target="_blank" rel="noreferrer">https://www.electron.build/configuration/configuration#configuration</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;appId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;com.yueluo.club&quot;</span><span style="color:#E1E4E8;">,             </span><span style="color:#6A737D;">// 应用ID</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;productName&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Mercurius&quot;</span><span style="color:#E1E4E8;">,             </span><span style="color:#6A737D;">// 应用名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;directories&quot;</span><span style="color:#E1E4E8;">: {                        </span><span style="color:#6A737D;">// 目录配置</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dist&quot;</span><span style="color:#E1E4E8;">,                           </span><span style="color:#6A737D;">// 打包的代码目录</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;buildResources&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resource&quot;</span><span style="color:#E1E4E8;">,            </span><span style="color:#6A737D;">// 构建包的资源目录</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;output&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;release&quot;</span><span style="color:#E1E4E8;">                      </span><span style="color:#6A737D;">// 存放产包的目录</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;asar&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,                           </span><span style="color:#6A737D;">// 是否使用 asar 加密</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;copyright&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Copyright © 2020 dragon&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 版权</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;appId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;com.yueluo.club&quot;</span><span style="color:#24292E;">,             </span><span style="color:#6A737D;">// 应用ID</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;productName&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Mercurius&quot;</span><span style="color:#24292E;">,             </span><span style="color:#6A737D;">// 应用名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;directories&quot;</span><span style="color:#24292E;">: {                        </span><span style="color:#6A737D;">// 目录配置</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;dist&quot;</span><span style="color:#24292E;">,                           </span><span style="color:#6A737D;">// 打包的代码目录</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;buildResources&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resource&quot;</span><span style="color:#24292E;">,            </span><span style="color:#6A737D;">// 构建包的资源目录</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;output&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;release&quot;</span><span style="color:#24292E;">                      </span><span style="color:#6A737D;">// 存放产包的目录</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;asar&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,                           </span><span style="color:#6A737D;">// 是否使用 asar 加密</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;copyright&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Copyright © 2020 dragon&quot;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 版权</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="electron-builder-mac-平台配置" tabindex="-1">electron-builder Mac 平台配置 <a class="header-anchor" href="#electron-builder-mac-平台配置" aria-label="Permalink to &quot;electron-builder Mac 平台配置&quot;">​</a></h4><p>mac：target、icon</p><p>dmg：contens、iconSize、window、background</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;mac&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;target&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;dmg&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;zip&quot;</span><span style="color:#E1E4E8;">],      </span><span style="color:#6A737D;">// 包格式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;icon&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/icon.icns&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// logo 地址</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;dmg&quot;</span><span style="color:#E1E4E8;">: {  </span><span style="color:#6A737D;">// dmg 配置 </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;background&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/background.png&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 背景图</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;window&quot;</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">540</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;height&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">380</span><span style="color:#E1E4E8;">},  </span><span style="color:#6A737D;">// 安装窗口大小</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;conetns&quot;</span><span style="color:#E1E4E8;">: [ </span><span style="color:#6A737D;">// dmg 内容坐标</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">410</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">190</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;link&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/Applications&quot;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">130</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">190</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;file&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;iconSize&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// logo 大小</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;mac&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;target&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;dmg&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;zip&quot;</span><span style="color:#24292E;">],      </span><span style="color:#6A737D;">// 包格式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;icon&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/icon.icns&quot;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// logo 地址</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;dmg&quot;</span><span style="color:#24292E;">: {  </span><span style="color:#6A737D;">// dmg 配置 </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;background&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/background.png&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 背景图</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;window&quot;</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;width&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">540</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;height&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">380</span><span style="color:#24292E;">},  </span><span style="color:#6A737D;">// 安装窗口大小</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;conetns&quot;</span><span style="color:#24292E;">: [ </span><span style="color:#6A737D;">// dmg 内容坐标</span></span>
<span class="line"><span style="color:#24292E;">      {</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">410</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">190</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;link&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/Applications&quot;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;">      {</span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">130</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">190</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;file&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;iconSize&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">128</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// logo 大小</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="electron-builder-windows-平台配置" tabindex="-1">electron-builder windows 平台配置 <a class="header-anchor" href="#electron-builder-windows-平台配置" aria-label="Permalink to &quot;electron-builder windows 平台配置&quot;">​</a></h4><p>win：target、icon</p><p>nsis：oneClick、language、perMachine、allowToChangeInstallationDir、ectory、allowElevation</p><p>squirreWindows：loadingGif、iconUrl</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;win&quot;</span><span style="color:#E1E4E8;">: { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;icon&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/icon.ico&quot;</span><span style="color:#E1E4E8;">,   </span><span style="color:#6A737D;">// logo 地址</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;target&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;nsis&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;squirrel&quot;</span><span style="color:#E1E4E8;">]  </span><span style="color:#6A737D;">// 包格式</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;nsis&quot;</span><span style="color:#E1E4E8;">: { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;oneClick&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 一键安装</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;language&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2052&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 安装语言代码</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;perMachine&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 给机器上所有用户安装</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;allowToChangeInstallationDir&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 让用户选择目录</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;squirreWindows&quot;</span><span style="color:#E1E4E8;">: { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;loadingGif&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/loading.gif&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 安装 loading 动画</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;iconUrl&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;https://xxx.com/icon.ico&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// icon 的远端地址</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;win&quot;</span><span style="color:#24292E;">: { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;icon&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/icon.ico&quot;</span><span style="color:#24292E;">,   </span><span style="color:#6A737D;">// logo 地址</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;target&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;nsis&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;squirrel&quot;</span><span style="color:#24292E;">]  </span><span style="color:#6A737D;">// 包格式</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;nsis&quot;</span><span style="color:#24292E;">: { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;oneClick&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 一键安装</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;language&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2052&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 安装语言代码</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;perMachine&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 给机器上所有用户安装</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;allowToChangeInstallationDir&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 让用户选择目录</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;squirreWindows&quot;</span><span style="color:#24292E;">: { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;loadingGif&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/loading.gif&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 安装 loading 动画</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;iconUrl&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;https://xxx.com/icon.ico&quot;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">// icon 的远端地址</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="打包配置" tabindex="-1">打包配置 <a class="header-anchor" href="#打包配置" aria-label="Permalink to &quot;打包配置&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Mercurius&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;version&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;description&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;remote control&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;main&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;app/main/index.js&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;scripts&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;echo </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">Error: no test specified</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> &amp;&amp; exit 1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;start&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;concurrently </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">npm run start:render</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">wait-on http://localhost:3000 &amp;&amp; npm run start:main</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;"> &quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;start:main&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;electron .&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;start:render&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;cd app/renderer/src/main &amp;&amp; npm start&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;cd app/renderer/src/main &amp;&amp; npm run build&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;pack:mac&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;npm run build &amp;&amp; NPM_CONFIG_ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ electron-builder build --mac&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;pack:wi&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;npm run build &amp;&amp; cross-env NPM_CONFIG_ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ electron-builder build --win --ia32&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;pack:win&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot; cross-env NPM_CONFIG_ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ electron-builder build --win --ia32&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;postinstall&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;electron-builder install-app-deps&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;keywords&quot;</span><span style="color:#E1E4E8;">: [],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;author&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;dragon&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;license&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;ISC&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;devDependencies&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;concurrently&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^5.0.2&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;cross-env&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^7.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;electron&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^7.1.8&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;electron-builder&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^22.3.2&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;electron-builder-squirrel-windows&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^22.3.3&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;wait-on&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^3.3.0&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;dependencies&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;about-window&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^1.13.2&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;electron-is-dev&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^1.1.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;electron-squirrel-startup&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^1.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;robotjs&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^0.6.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;vkey&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^1.0.1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ws&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;^7.2.1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;appId&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;com.geektime.mercurius&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;productName&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Mercurius&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;files&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;asar&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;extraFiles&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;app/renderer/**/src&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;directories&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;buildResources&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resource&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;output&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;release&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;copyright&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Copyright © 2020 dragon&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;mac&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;target&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;dmg&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;zip&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      ],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;icon&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/icon.icns&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;dmg&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;background&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/background.png&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;window&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;width&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">540</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;height&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">380</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;contents&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">410</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">180</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;link&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;path&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/Applications&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">        {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;x&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">130</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;y&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">180</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;file&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      ],</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;iconSize&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">128</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;win&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;icon&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;resources/icon.ico&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;target&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;squirrel&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;nsis&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      ]</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;nsis&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;oneClick&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;language&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2052&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;perMachine&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;allowToChangeInstallationDirectory&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;squirrelWindows&quot;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&quot;iconUrl&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;https://raw.githubusercontent.com/dengyaolong/geektime-electron/master/img/icon.ico&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Mercurius&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;version&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;remote control&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;main&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;app/main/index.js&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;scripts&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;echo </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Error: no test specified</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> &amp;&amp; exit 1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;start&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;concurrently </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">npm run start:render</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">wait-on http://localhost:3000 &amp;&amp; npm run start:main</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;"> &quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;start:main&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;electron .&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;start:render&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;cd app/renderer/src/main &amp;&amp; npm start&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;cd app/renderer/src/main &amp;&amp; npm run build&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;pack:mac&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;npm run build &amp;&amp; NPM_CONFIG_ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ electron-builder build --mac&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;pack:wi&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;npm run build &amp;&amp; cross-env NPM_CONFIG_ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ electron-builder build --win --ia32&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;pack:win&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot; cross-env NPM_CONFIG_ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/ electron-builder build --win --ia32&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;postinstall&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;electron-builder install-app-deps&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;keywords&quot;</span><span style="color:#24292E;">: [],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;author&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;dragon&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;license&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;ISC&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;devDependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;concurrently&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^5.0.2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;cross-env&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^7.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;electron&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^7.1.8&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;electron-builder&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^22.3.2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;electron-builder-squirrel-windows&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^22.3.3&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;wait-on&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^3.3.0&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;dependencies&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;about-window&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^1.13.2&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;electron-is-dev&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^1.1.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;electron-squirrel-startup&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^1.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;robotjs&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^0.6.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;vkey&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^1.0.1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ws&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;^7.2.1&quot;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;appId&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;com.geektime.mercurius&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;productName&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Mercurius&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;files&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;asar&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;extraFiles&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;app/renderer/**/src&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ],</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;directories&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;buildResources&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resource&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;output&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;release&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;copyright&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Copyright © 2020 dragon&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;mac&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;target&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;dmg&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;zip&quot;</span></span>
<span class="line"><span style="color:#24292E;">      ],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;icon&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/icon.icns&quot;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;dmg&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;background&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/background.png&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;window&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;width&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">540</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;height&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">380</span></span>
<span class="line"><span style="color:#24292E;">      },</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;contents&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">410</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">180</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;link&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;path&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/Applications&quot;</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">        {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;x&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">130</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;y&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">180</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;file&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      ],</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;iconSize&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">128</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;win&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;icon&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;resources/icon.ico&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;target&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;squirrel&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;nsis&quot;</span></span>
<span class="line"><span style="color:#24292E;">      ]</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;nsis&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;oneClick&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;language&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2052&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;perMachine&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;allowToChangeInstallationDirectory&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;squirrelWindows&quot;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">&quot;iconUrl&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;https://raw.githubusercontent.com/dengyaolong/geektime-electron/master/img/icon.ico&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><ul><li>产品发布时版本号需要升级，一般遵循 semver 语法，可以使用 npm version patch/minor/major 管理</li><li>windows 下需要证书签名，否则可能被杀毒软件误杀</li><li>mac 下如果没有证书签名，无法使用 Electron 自动更新</li><li>windows 下打包可以写 nsis 逻辑修改安装包</li><li>开源软件可以基于 Travis、AppVeyor 持续集成</li></ul>`,125),g=[q,C,b];function m(B,v,k,w,A,D){return o(),p("div",null,g)}const P=l(h,[["render",m]]);export{x as __pageData,P as default};
