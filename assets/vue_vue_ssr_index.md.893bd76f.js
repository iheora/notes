import{_ as e,o as a,c as t,Q as r}from"./chunks/framework.88002d8f.js";const i="/notes/assets/ssr.137f1dd9.png",f=JSON.parse('{"title":"服务端渲染","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue_ssr/index.md","filePath":"vue/vue_ssr/index.md"}'),o={name:"vue/vue_ssr/index.md"},s=r('<h1 id="服务端渲染" tabindex="-1">服务端渲染 <a class="header-anchor" href="#服务端渲染" aria-label="Permalink to &quot;服务端渲染&quot;">​</a></h1><h2 id="_1-优点" tabindex="-1">1. 优点 <a class="header-anchor" href="#_1-优点" aria-label="Permalink to &quot;1. 优点&quot;">​</a></h2><ul><li>利于SEO优化</li><li>减少首屏渲染时间</li></ul><h2 id="_2-缺点" tabindex="-1">2. 缺点 <a class="header-anchor" href="#_2-缺点" aria-label="Permalink to &quot;2. 缺点&quot;">​</a></h2><ul><li>可能会消耗更多的CPU和内存资源</li><li>常用浏览器端API无法访问</li><li>不支持 mouted，beforeMouted 等钩子函数（与DOM操作相关都不支持）</li><li>支持 beforeCreate，created 钩子函数</li></ul><h2 id="_3-服务端渲染" tabindex="-1">3. 服务端渲染 <a class="header-anchor" href="#_3-服务端渲染" aria-label="Permalink to &quot;3. 服务端渲染&quot;">​</a></h2><p>首屏渲染使用服务端渲染实现，路由切换由客户端来完成。</p><p><img src="'+i+'" alt="流程"></p><p>服务端生成渲染字符串，由客户端代码来激活。</p><p>对于服务端来说，每次请求都会创建一个新的vue实例。</p>',10),l=[s];function _(n,d,c,h,u,p){return a(),t("div",null,l)}const x=e(o,[["render",_]]);export{f as __pageData,x as default};
