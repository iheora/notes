import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.88002d8f.js";const p="/notes/assets/arcTo.959e0cf3.png",o="/notes/assets/2.e7eda3bc.gif",e="/notes/assets/3.16cddf7e.gif",u=JSON.parse('{"title":"Canvas","description":"","frontmatter":{},"headers":[],"relativePath":"html5/canvas/index.md","filePath":"html5/canvas/index.md"}'),t={name:"html5/canvas/index.md"},c=l(`<h1 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h1><h2 id="绘制圆形、添加样式和颜色、变形" tabindex="-1">绘制圆形、添加样式和颜色、变形 <a class="header-anchor" href="#绘制圆形、添加样式和颜色、变形" aria-label="Permalink to &quot;绘制圆形、添加样式和颜色、变形&quot;">​</a></h2><p>canvas 兼容性比较好，IE9 就开始支持 canvas。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">canvas</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;J-canvas&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;300&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;150&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">canvas</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">canvas</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;J-canvas&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;300&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;150&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">canvas</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;"> type=&quot;text/css&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">#J-canvas</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">border</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">solid</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">#000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">style</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;"> type=&quot;text/css&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">#J-canvas</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">border</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">px</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">solid</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">#000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">style</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>canvas 仅支持一种原生图形的绘制，就是矩形（正方形就是特殊的矩形）。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">onst oCanvas </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;J-canvas&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1. 获取渲染上下文 (上下文类型) </span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ctx</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> oCanvas.</span><span style="color:#B392F0;">getContext</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2d&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">onst oCanvas </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;J-canvas&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 1. 获取渲染上下文 (上下文类型) </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ctx</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> oCanvas.</span><span style="color:#6F42C1;">getContext</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2d&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><blockquote><p>2d：CanvasRenderingContext2D webgl：WebGLRenderingContext</p></blockquote><h3 id="绘制矩形" tabindex="-1">绘制矩形 <a class="header-anchor" href="#绘制矩形" aria-label="Permalink to &quot;绘制矩形&quot;">​</a></h3><p>矩形类型：</p><ul><li>填充满的矩形；</li><li>只有轮廓的矩形；</li><li>透明矩形。</li></ul><h4 id="绘制填充满矩形" tabindex="-1">绘制填充满矩形 <a class="header-anchor" href="#绘制填充满矩形" aria-label="Permalink to &quot;绘制填充满矩形&quot;">​</a></h4><p>fillRect(x, y, width, height)</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.fillStyle </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;orange&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">fillRect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.fillStyle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;orange&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">fillRect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span></code></pre></div><h4 id="绘制透明矩形" tabindex="-1">绘制透明矩形 <a class="header-anchor" href="#绘制透明矩形" aria-label="Permalink to &quot;绘制透明矩形&quot;">​</a></h4><p>clearRect(x, y, width, height)</p><p>清除指定区域，类似橡皮擦擦掉内容的效果。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.fillStyle </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;orange&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">fillRect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">clearRect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.fillStyle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;orange&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">fillRect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">clearRect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">75</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">75</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span></code></pre></div><h4 id="绘制带轮廓矩形" tabindex="-1">绘制带轮廓矩形 <a class="header-anchor" href="#绘制带轮廓矩形" aria-label="Permalink to &quot;绘制带轮廓矩形&quot;">​</a></h4><p>stroke 笔画。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.strokeStyle </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;orange&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">strokeRect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.strokeStyle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;orange&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">strokeRect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span></code></pre></div><h3 id="绘制路径" tabindex="-1">绘制路径 <a class="header-anchor" href="#绘制路径" aria-label="Permalink to &quot;绘制路径&quot;">​</a></h3><p>创建路径 ，使用画图命令画出路径，一旦路径被创建，可以通过描边或者填充来渲染图形。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 创建新路径</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">beginPath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#6A737D;">// 设置路径颜色（可选）</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.strokeStyle </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;orange&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 设置路径宽度（可选）</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.lineWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 设置起始点</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">moveTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 设置终止点</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">lineTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 绘制</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">stroke</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 创建新路径</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">beginPath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#6A737D;">// 设置路径颜色（可选）</span></span>
<span class="line"><span style="color:#24292E;">ctx.strokeStyle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;orange&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 设置路径宽度（可选）</span></span>
<span class="line"><span style="color:#24292E;">ctx.lineWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">// 设置起始点</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">moveTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 设置终止点</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">lineTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">// 绘制</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="绘制三角形" tabindex="-1">绘制三角形 <a class="header-anchor" href="#绘制三角形" aria-label="Permalink to &quot;绘制三角形&quot;">​</a></h3><p>closePath 闭合路径。通过闭合路径可以将最后点和起始点做连接。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">beginPath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.strokeStyle </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;orange&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">moveTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.lineWidth </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">lineTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">lineTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">closePath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">stroke</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">beginPath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">ctx.strokeStyle </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;orange&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">moveTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.lineWidth </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">lineTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">150</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">lineTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">closePath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="绘制圆形" tabindex="-1">绘制圆形 <a class="header-anchor" href="#绘制圆形" aria-label="Permalink to &quot;绘制圆形&quot;">​</a></h3><p>arc(x, y, radius, startAngle, endAngle, anticlockwise)；</p><blockquote><p>arc ：弧（度）</p><p>anticlockwise：逆时针的</p></blockquote><h4 id="_360°-圆形" tabindex="-1">360° 圆形 <a class="header-anchor" href="#_360°-圆形" aria-label="Permalink to &quot;360° 圆形&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">beginPath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">arc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#79B8FF;">PI</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">stroke</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">beginPath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">arc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> Math.</span><span style="color:#005CC5;">PI</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">();</span></span></code></pre></div><h4 id="_90°-圆形" tabindex="-1">90° 圆形 <a class="header-anchor" href="#_90°-圆形" aria-label="Permalink to &quot;90° 圆形&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">beginPath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">arc</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, Math.</span><span style="color:#79B8FF;">PI</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">180</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">90</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">stroke</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">beginPath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">arc</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">70</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">70</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, Math.</span><span style="color:#005CC5;">PI</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">180</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">90</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="绘制不规律图形" tabindex="-1">绘制不规律图形 <a class="header-anchor" href="#绘制不规律图形" aria-label="Permalink to &quot;绘制不规律图形&quot;">​</a></h3><p>arcTo(x1, y1, x2, y2, radius);</p><blockquote><p>x，y：控制点坐标</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">beginPath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">moveTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">arcTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">150</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">lineTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">stroke</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">beginPath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">moveTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">150</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">arcTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">150</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">lineTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">();</span></span></code></pre></div><img src="`+p+'"><h3 id="贝塞尔曲线" tabindex="-1">贝塞尔曲线 <a class="header-anchor" href="#贝塞尔曲线" aria-label="Permalink to &quot;贝塞尔曲线&quot;">​</a></h3><p>贝塞尔曲线由 1962 年法国工程师 皮埃尔·贝塞尔提出，起初用于汽车的主体设计。</p><p>二次贝塞尔曲线（quadraticCurveTo）：</p><img src="'+o+'"><p>三次贝塞尔曲线：</p><img src="'+e+`"><p>可以借助贝塞尔曲线实现比较复杂的路径绘制。</p><p>比如可以实现旋转木马等效果。</p><h4 id="二次贝塞尔曲线" tabindex="-1">二次贝塞尔曲线 <a class="header-anchor" href="#二次贝塞尔曲线" aria-label="Permalink to &quot;二次贝塞尔曲线&quot;">​</a></h4><p>quadraticCurveTo(cpx, cpy, x, y)</p><blockquote><p>cp：control point 控制点</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">beginPath</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">moveTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">quadraticCurveTo</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">230</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">ctx.</span><span style="color:#B392F0;">stroke</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">beginPath</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">moveTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">quadraticCurveTo</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">230</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">ctx.</span><span style="color:#6F42C1;">stroke</span><span style="color:#24292E;">();</span></span></code></pre></div>`,51),r=[c];function E(y,i,F,d,C,h){return a(),n("div",null,r)}const v=s(t,[["render",E]]);export{u as __pageData,v as default};
